val rdd1 = sc.textFile("/mnt/d/scala/job.txt")
val rdd2 = rdd1.flatMap(_.split(" "))
val rdd3 = rdd2.map(w=>(w,1))
val rdd4 = rdd3.reduceByKey(_+_)
rdd4.collect()
sc.textFile("/mnt/d/scala/job.txt").flatMap(_.split(" ")).map((_,1)).reduceByKey(_+_).collect
val rdd1 = sc.textFile("/mnt/d/scala/job2.txt")
val rdd2 = rdd1.map(line => {
  val arr = line.split(" ")
  if (arr.length == 2) (arr(0).toInt, (arr(1).toInt, arr(1).toInt))
  else (0, (0, 0)) // Если строка не соответствует ожидаемому формату, возвращаем пустое значение
})
import scala.math
val rdd3 = rdd2.reduceByKey((a, b) => {
  (math.max(a._1, b._1), math.min(a._2, b._2))
})
rdd3.collect()
sc.textFile("/mnt/d/scala/job2.txt").map(line=>{
     val arr = line.split(" ")
      (arr(0).toInt,(arr(1).toInt , arr(1).toInt))
 }).reduceByKey((a,b)=>{
     import scala.math
      (math.max(a._1 , b._1) , math.min(a._2 , b._2))
 }).collect()